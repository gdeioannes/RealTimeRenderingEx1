// author : Gabriel De Ioannes
// author : Sagar Nagaraj

#include <iostream>
#include <fstream>
#include <sstream>
#include <iomanip>

using namespace std;

class Point2D {
public:
    int x;
    int y;
};

bool CheckPoint(Point2D a,Point2D b,Point2D c,int ori);
int ORI(Point2D p1, Point2D p2,Point2D p3);

int screenWidth=20;
int screenHeight=20;

int main (){
    string line;
    while(getline(cin,line)){
        if(line == "0 0 0 0 0 0"){
        	break;
        }
        istringstream ss(line);
        Point2D a,b,c,d;
        ss >> a.x >> a.y >> b.x >> b.y >> c.x >> c.y;
        int ori =ORI(a,b,c);
        cout << ori;
        for(int i=screenHeight;i>=0;i--){
        	cout << "\n";
        	cout.flush();
        	for(int j=0;j<=screenWidth;j++){
        		d.x=j;
        		d.y=i;
        		if(CheckPoint(a,b,d,ori) || CheckPoint(b,c,d,ori) || CheckPoint(c,a,d,ori)){
        			cout << "*";
        		}else{
        			cout << ".";
        		}
        		cout.flush();
        	}
        }
        cout << "\n";
        cout.flush();
    }
    return 0;
}

bool CheckPoint(Point2D a,Point2D b,Point2D c,int ori){
	double num=b.x*c.y+c.x*a.y+a.x*b.y-a.x*c.y-b.x*a.y-c.x*b.y;
	return num == 0;
}

int ORI(Point2D p1, Point2D p2,Point2D p3){
	double dx21 = p2.x - p1.x;
	double dy21 = p2.y - p1.y;
	double dx31 = p3.x - p1.x;
	double dy31 = p3.y - p1.y;
	if (dx21*dy31 < dy21*dx31) return -1; // ccw

	if (dx21*dy31 > dy21*dx31) return 1; // cw

	if (dx21*dx31 < 0 || dy21*dy31<0) return -1; // ccw

	if (dx31*dx31 + dy31*dy31 > dx21*dx21 + dy21*dy21) return +1; //cw

	return 0; // p3 is inside p1,p2
}


